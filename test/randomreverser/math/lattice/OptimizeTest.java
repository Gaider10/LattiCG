package randomreverser.math.lattice;

import org.junit.Test;
import randomreverser.math.component.BigMatrix;
import randomreverser.math.component.BigVector;

import static org.junit.Assert.assertEquals;

public class OptimizeTest {
    @Test
    public void testOptimize1() {
        BigMatrix table = BigMatrix.fromString(
                "{\n" +
                "    { -1/281474976710656, 0, -3/281474976710656, 0, 1/140737488355328, 0, 0, 1/281474976710656, 0, 3/281474976710656, 1/140737488355328, 1/70368744177664, 0, 1/281474976710656, -69/281474976710656, -1/70368744177664, -1/70368744177664, 0 },\n" +
                "    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 70368744177664 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2199023255552 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 17592186044416 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17592186044416 },\n" +
                "    { 1/140737488355328, 1/281474976710656, 0, 0, 3/281474976710656, 0, 1/281474976710656, 1/140737488355328, 0, 1/140737488355328, 1/140737488355328, 1/140737488355328, 0, 1/281474976710656, 23/281474976710656, 1/35184372088832, 1/281474976710656, 314791393552653/70368744177664 },\n" +
                "    { -1/281474976710656, -1/281474976710656, 1/140737488355328, 0, 3/281474976710656, 0, -1/281474976710656, -1/281474976710656, 1/281474976710656, 1/281474976710656, 0, 3/281474976710656, -1/281474976710656, 1/140737488355328, -25/281474976710656, -1/281474976710656, 7/281474976710656, 456516013332211/281474976710656 },\n" +
                "    { 0, -1/281474976710656, 0, -1/281474976710656, 1/140737488355328, 0, 0, 1/281474976710656, -3/281474976710656, 1/281474976710656, 0, 1/70368744177664, 1/281474976710656, 1/140737488355328, -5/17592186044416, 3/140737488355328, 1/70368744177664, 29759709885009/17592186044416 },\n" +
                "    { 1/140737488355328, 1/281474976710656, 0, -1/281474976710656, -1/140737488355328, 0, 0, 0, -1/281474976710656, 0, 1/140737488355328, 1/70368744177664, 0, 1/140737488355328, -1/35184372088832, 5/140737488355328, -1/281474976710656, 286899638914479/140737488355328 },\n" +
                "    { -1/281474976710656, 1/281474976710656, 1/281474976710656, 1/281474976710656, 0, 1/140737488355328, 1/281474976710656, 1/140737488355328, 1/281474976710656, 1/281474976710656, 1/281474976710656, 3/281474976710656, -1/140737488355328, 1/140737488355328, -45/281474976710656, 11/281474976710656, -7/281474976710656, 777864992383031/281474976710656 },\n" +
                "    { -1/281474976710656, 1/281474976710656, 3/281474976710656, 1/281474976710656, -1/281474976710656, 0, 1/140737488355328, -1/281474976710656, 1/70368744177664, -1/281474976710656, -1/281474976710656, 0, 1/281474976710656, -1/281474976710656, -29/140737488355328, -1/140737488355328, -3/140737488355328, 2192950653631/281474976710656 },\n" +
                "    { 1/281474976710656, -1/140737488355328, -1/281474976710656, 0, -3/281474976710656, 0, 1/281474976710656, 1/140737488355328, 1/140737488355328, 1/281474976710656, 0, 1/70368744177664, 1/140737488355328, 1/281474976710656, -19/140737488355328, 1/140737488355328, -1/70368744177664, 58896768021073/35184372088832 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n" +
                "    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }\n" +
                "}\n"
        );

        BigVector x = BigMatrix.fromString(
                "{\n" +
                "    { 101333048399199009/2399 },\n" +
                "    { 156319520193875121/2399 },\n" +
                "    { 37740630744994008/2399 },\n" +
                "    { 70368744177664 },\n" +
                "    { 70368744177664 },\n" +
                "    { 80544404687070213/2399 },\n" +
                "    { 70368744177664 },\n" +
                "    { 70368744177664 },\n" +
                "    { 145816072752350319/2399 },\n" +
                "    { 70368744177664 },\n" +
                "    { 70368744177664 },\n" +
                "    { 70368744177664 },\n" +
                "    { 70368744177664 },\n" +
                "    { 155970603565960743/2399 },\n" +
                "    { 4355378073975966/2399 },\n" +
                "    { 17592186044416 },\n" +
                "    { 17592186044416 }\n" +
                "}\n"
        ).getColumn(0);

        assertEquals(x, Optimize.optimize(table, 17, 7));
    }
}
